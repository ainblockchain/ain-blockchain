# This setup is for local run.
name: AIN-blockchain CI/CD

on:
  push:
    branches:
      - 'develop'
      - 'release/*'
      - 'master'
  pull_request:
    branches:
      - 'develop'
      - 'release/*'
      - 'master'
jobs:
  build_and_test:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install Yarn
        run: sudo npm install -g yarn
      - name: install pip
        run: |
          sudo apt-get install software-properties-common
          sudo apt-add-repository universe
          sudo apt-get update
          sudo apt-get -y install python-pip
          pip install ast
      - name: yarn install
        run: yarn install
      # - name: yarn unittest
      #   run: yarn run test_unit
      - name: yarn integration test
        run: yarn run test_integration
  check_protocol_version:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: test
        if: github.event_name == 'push'
        run: echo ${{github.event_name}}
      - name: get current version
        run: echo "VERSION=$(cat package.json | jq -r '.version')" >> $GITHUB_ENV
      - name: get min/max versions
        run: |
          echo "MIN_VERSION=$(cat client/protocol_versions.json | jq -r --arg var "$VERSION" '.[$var].min')" >> $GITHUB_ENV
          echo "MAX_VERSION=$(cat client/protocol_versions.json | jq -r --arg var "$VERSION" '.[$var].max')" >> $GITHUB_ENV
      - name: send results
        env:
          SLACK_WEBHOOK_TOKEN: ${{ secrets.SLACK_WEBHOOK_TOKEN }}
        run: |
          curl -X POST https://hooks.slack.com/services/$SLACK_WEBHOOK_TOKEN \
            -H "Content-Type: application/json" \
            -d '{"username": "ain-blockchain",
            "channel": "blockchain-testnet-deploy",
            "text": "New PR has just been merged(${{ github.ref }}, ${{ github.sha }}).\nCurrent version: '"$VERSION"', compatible with min('"$MIN_VERSION"'), max('"$MAX_VERSION"')",
            "icon_emoji": ":gem:"}'
